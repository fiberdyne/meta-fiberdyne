From a0fd084348a33dcd24a9bde43f8415ba6bcdc55e Mon Sep 17 00:00:00 2001
From: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
Date: Tue, 24 Nov 2015 14:26:02 +0100
Subject: [PATCH] ethernet: ravb: introduce alternative PHY MDIO address use

This is helpful for boards which PHY ID latch is not robust
during power up.

f.e. stout-view has such issue

Signed-off-by: Vladimir Barinov <vladimir.barinov@cogentembedded.com>
---
 drivers/net/ethernet/renesas/ravb.h      |  1 +
 drivers/net/ethernet/renesas/ravb_main.c | 17 ++++++++++++++---
 include/linux/sh_eth.h                   |  1 +
 3 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/renesas/ravb.h b/drivers/net/ethernet/renesas/ravb.h
index 9b1ef3e..5e17d19 100644
--- a/drivers/net/ethernet/renesas/ravb.h
+++ b/drivers/net/ethernet/renesas/ravb.h
@@ -929,6 +929,7 @@ struct ravb_private {
 	struct napi_struct napi;
 	/* MII transceiver section. */
 	u32 phy_id;			/* PHY ID */
+	u32 phy_id_alt;			/* PHY ID alternative */
 	int phy_irq;			/* PHY irq number */
 	int *phy_ignore_pins;		/* Unused pins */
 	int num_phy_ignore_pins;	/* Number of unused pins */
diff --git a/drivers/net/ethernet/renesas/ravb_main.c b/drivers/net/ethernet/renesas/ravb_main.c
index c296576..c5c79db 100644
--- a/drivers/net/ethernet/renesas/ravb_main.c
+++ b/drivers/net/ethernet/renesas/ravb_main.c
@@ -1336,8 +1336,15 @@ static int ravb_phy_start(struct net_device *ndev)
 	int ret;
 
 	ret = ravb_phy_init(ndev);
-	if (ret)
-		return ret;
+	if (ret) {
+		/* try alternative mdio address */
+		if (mdp->phy_id_alt) {
+			mdp->phy_id = mdp->phy_id_alt;
+			ret = ravb_phy_init(ndev);
+		}
+		if (ret)
+			return ret;
+	}
 
 	ravb_phy_hack(ndev);
 
@@ -2032,8 +2039,10 @@ static int sh_mdio_init(struct ravb_private *mdp,
 	/* register MDIO bus */
 	for (i = 0; i < PHY_MAX_ADDR; i++)
 		mdp->mii_bus->irq[i] = PHY_POLL;
-	if (pd->phy_irq > 0)
+	if (pd->phy_irq > 0) {
 		mdp->mii_bus->irq[pd->phy] = pd->phy_irq;
+		mdp->mii_bus->irq[pd->phy_alt] = pd->phy_irq;
+	}
 
 	ret = mdiobus_register(mdp->mii_bus);
 
@@ -2099,6 +2108,7 @@ static struct ravb_plat_data *ravb_parse_dt(struct device *dev,
 	pdata->ether_link_active_low =
 		of_property_read_bool(np, "renesas,ether-link-active-low");
 	of_property_read_u32(np, "renesas,phy", &pdata->phy);
+	of_property_read_u32(np, "renesas,phy_alt", &pdata->phy_alt);
 	of_property_read_u32(np, "renesas,phy_irq", &pdata->phy_irq);
 	gpio = of_get_named_gpio_flags(np, "phy-int-gpio", 0, &flags);
 	if (gpio_is_valid(gpio)) {
@@ -2206,6 +2216,7 @@ static int ravb_drv_probe(struct platform_device *pdev)
 
 	/* get PHY ID */
 	mdp->phy_id = pd->phy;
+	mdp->phy_id_alt = pd->phy_alt;
 	mdp->phy_irq = pd->phy_irq;
 	mdp->phy_interface = pd->phy_interface;
 	/* EDMAC endian */
diff --git a/include/linux/sh_eth.h b/include/linux/sh_eth.h
index 8c3dc4c..06d3dcd 100644
--- a/include/linux/sh_eth.h
+++ b/include/linux/sh_eth.h
@@ -16,6 +16,7 @@ struct sh_eth_plat_data {
 	unsigned no_ether_link:1;
 	unsigned ether_link_active_low:1;
 	unsigned needs_init:1;
+	int phy_alt;
 };
 
 #endif
-- 
1.9.1

